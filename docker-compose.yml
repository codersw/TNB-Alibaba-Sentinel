# docker-compose.yml文件的版本
version: "3.7"
# 管理的服务
services:
  redis:
    # 指定镜像
    image: "redis:5.0.5"
    ports:
      # 端口映射
      - "6379:6379"
    volumes:
      # 目录映射
      - "${REDIS_DIR}/conf:/usr/local/etc/redis"
      - "${REDIS_DIR}/data:/data"
  mysql:
    image: "mysql:5.7.27"
    ports:
      - "3306:3306"
    volumes:
      - "${MYSQL_DIR}/data:/var/lib/mysql"
      - "${MYSQL_DIR}/conf.d:/etc/mysql/conf.d"
    environment:
      # 环境变量
      - "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}"
      - "MYSQL_DATABASE=test"
      - "MYSQL_ROOT_HOST=%"
    command: [
      "mysqld",
      "--innodb-buffer-pool-size=20M",
      "--character-set-server=utf8",
      "--collation-server=utf8_general_ci",
      "--default-time-zone=+8:00",
      "--lower-case-table-names=1"
    ]
  dashboard:
    build:
      context: ./
      dockerfile: dashboard/Dockerfile
      args:
        JAR_FILE: dashboard/target/dashboard.jar
    ports:
      - "8080:8080"
#    environment:
#      - "csp.sentinel.dashboard.server=localhost:8080"
#      - "project.name=dashboard"
#      - "csp.sentinel.api.port=8719"
#      - "redis.host=172.17.0.1"
#      - "redis.port=6379"
#      - "server.port=8080"
    environment:
      - JAVA_OPTS=-Dserver.port=8080 -Dcsp.sentinel.dashboard.server=localhost:8080 -Dproject.name=sentinel-dashboard -Dcsp.sentinel.api.port=8719 -Dredis.host=172.17.0.1 -Dredis.port=6379
    volumes:
      - "${DASH_DIR}/tmp:/tmp"
      - "${DASH_DIR}/logs:/root/logs/"
    depends_on:
      - mysql
      - redis
    restart: always
